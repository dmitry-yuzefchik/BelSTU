USE Taskboard;

CREATE TABLE "USER"
(
	id INT IDENTITY(1, 1) PRIMARY KEY,
	email NVARCHAR(256) UNIQUE NOT NULL,
	"password" BINARY(64) NOT NULL,
	salt UNIQUEIDENTIFIER UNIQUE NOT NULL
);

CREATE TABLE "USER_TOKEN"
(
	id INT IDENTITY(1, 1) PRIMARY KEY,
	token UNIQUEIDENTIFIER UNIQUE NOT NULL,
	created DATETIME NOT NULL,
	"lifeTime" INT NOT NULL DEFAULT 30,
	userId INT UNIQUE FOREIGN KEY REFERENCES "USER"(id)
)

--CREATE TABLE USER_SETTINGS
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	primaryColor NVARCHAR(256) NOT NULL DEFAULT 'WHITE',
--	secondaryColor NVARCHAR(256) NOT NULL DEFAULT 'ORANGE',
--	userId INT UNIQUE FOREIGN KEY REFERENCES "USER"(id)
--);

CREATE TABLE USER_PROFILE
(
	id INT IDENTITY(1, 1) PRIMARY KEY,
	"name" NVARCHAR(64) NOT NULL,
	about NVARCHAR(256),
	icon IMAGE,
	userId INT UNIQUE FOREIGN KEY REFERENCES "USER"(id)
);

--CREATE TABLE ROLES
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	roleType NVARCHAR(7) NOT NULL CHECK (roleType IN ('CREATOR', 'ADMIN', 'USER', 'MANAGER'))
--);

CREATE TABLE TEAM
(
	id INT IDENTITY(1, 1) PRIMARY KEY,
	title NVARCHAR(64) NOT NULL DEFAULT 'Team'
);

CREATE TABLE PROJECT
(
	id INT IDENTITY(1, 1) PRIMARY KEY,
	title NVARCHAR(64) NOT NULL DEFAULT 'Project',
	about NVARCHAR(256),
	teamId INT FOREIGN KEY REFERENCES TEAM(id) 
)

--CREATE TABLE ACTIVITY
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	activity NVARCHAR(256),
--	"date" TIMESTAMP
--);

CREATE TABLE BOARD
(
	id INT IDENTITY(1, 1) PRIMARY KEY,
	title NVARCHAR(64) NOT NULL DEFAULT 'Board',
	projectId INT FOREIGN KEY REFERENCES PROJECT(id)
);

--CREATE TABLE "COLUMN"
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	title NVARCHAR(64) NOT NULL DEFAULT 'Task list',
--	boardId INT FOREIGN KEY REFERENCES BOARD(id)
--);

CREATE TABLE DOCUMENT
(
	id INT IDENTITY(1, 1) PRIMARY KEY,
	"name" NVARCHAR(128),
	extension NVARCHAR(16),
	document VARBINARY(MAX),
);

CREATE TABLE TASKS
(
	id INT IDENTITY(1, 1) PRIMARY KEY,
	--columnId INT FOREIGN KEY REFERENCES "COLUMN"(ID),
	boardId INT FOREIGN KEY REFERENCES BOARD(id),
	title NVARCHAR(64) NOT NULL DEFAULT 'Task',
	content NVARCHAR(1024),
	attachments INT REFERENCES DOCUMENT(id),
	"type" NVARCHAR(11) NOT NULL
		 CHECK ("type" IN ('BUG', 'FEATURE', 'IMPROVEMENT'))
		 DEFAULT 'BUG',
	"priority"  NVARCHAR(6) NOT NULL 
		CHECK ("priority" IN ('LOW', 'MEDIUM', 'HIGH', 'URGENT'))
		DEFAULT 'LOW',
	severity NVARCHAR(8) CHECK (severity IN ('BLOCKER', 'CRITICAL', 'NORMAL', 'LOW'))
		DEFAULT 'LOW',
	"status" NVARCHAR(16) NOT NULL
		CHECK ("status" IN ('CREATED', 'IN PROGRESS', 'FINISHED'))
		DEFAULT 'CREATED',
	asigneeId INT FOREIGN KEY REFERENCES [USER](id),
	finishTime DATETIME,
	startTime DATETIME
);

--CREATE TABLE BOARD_SETTINGS 
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	background IMAGE,
--	primaryColor NVARCHAR(256) NOT NULL,
--	secondaryColor NVARCHAR(256) NOT NULL,
--	accessToDeleteTask NVARCHAR(7) NOT NULL DEFAULT 'CREATOR'
--		CHECK (accessToDeleteTask IN ('CREATOR', 'ADMIN', 'USER', 'MANAGER')),
--	accessToChangeTask NVARCHAR(7) NOT NULL DEFAULT 'CREATOR'
--		CHECK (accessToChangeTask IN ('CREATOR', 'ADMIN', 'USER', 'MANAGER')),
--	accessToCreateTask NVARCHAR(7) NOT NULL 	DEFAULT 'USER'
--		CHECK (accessToCreateTask IN ('CREATOR', 'ADMIN', 'USER', 'MANAGER')),
--	boardId INT UNIQUE FOREIGN KEY REFERENCES BOARD(id)
--);

--CREATE TABLE PROJECT_SETTINGS
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	background IMAGE,
--	accessToDeleteBoard NVARCHAR(7) NOT NULL DEFAULT 'CREATOR'
--		CHECK (accessToDeleteBoard IN ('CREATOR', 'ADMIN', 'USER', 'MANAGER')),
--	accessToChangeBoard NVARCHAR(7) NOT NULL DEFAULT 'CREATOR'
--		CHECK (accessToChangeBoard IN ('CREATOR', 'ADMIN', 'USER', 'MANAGER')),
--	accessToCreateBoard NVARCHAR(7) NOT NULL DEFAULT 'CREATOR'
--		CHECK (accessToCreateBoard IN ('CREATOR', 'ADMIN', 'USER', 'MANAGER')),
--	projectId INT UNIQUE FOREIGN KEY REFERENCES PROJECT(id)
--);

--CREATE TABLE TEAM_ROLE -- remove
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	teamId INT FOREIGN KEY REFERENCES TEAM(id),
--	roleId INT FOREIGN KEY REFERENCES ROLES(id)
--);

CREATE TABLE TEAM_USER
(
	id INT IDENTITY(1, 1) PRIMARY KEY,
	userId INT FOREIGN KEY REFERENCES "USER"(id),
	teamId INT FOREIGN KEY REFERENCES TEAM(id),
	"role" VARCHAR(8) NOT NULL
		CHECK ("role" IN ('CREATOR', 'USER'))
);

--CREATE TABLE USER_BOARD
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	userId INT FOREIGN KEY REFERENCES "USER"(id),
--	boardId INT FOREIGN KEY REFERENCES BOARD(id)
--);

--CREATE TABLE USER_PROJECT
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	userId INT FOREIGN KEY REFERENCES "USER"(id),
--	projectId INT FOREIGN KEY REFERENCES PROJECT(id),
--	activityId INT FOREIGN KEY REFERENCES ACTIVITY(id),
--	roleId INT FOREIGN KEY REFERENCES ROLES(id)
--);

--CREATE TABLE USER_ACCESS
--(
--	id INT IDENTITY(1, 1) PRIMARY KEY,
--	userId INT FOREIGN KEY REFERENCES "USER"(id),
--	accessId INT FOREIGN KEY REFERENCES ACCESS(id)
--);